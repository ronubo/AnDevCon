# Copyright (C) 2012 The Android Open Source Project
#
# IMPORTANT: Do not create world writable files or directories.
# This is a common source of Android security bugs.
#

on early-init
    mount debugfs debugfs /sys/kernel/debug

    # Not sure we need anything below this line
    chmod 755 /sys/kernel/debug      
    # Make it tablet like
    setprop ro.sf.lcd_density 130 

on init
    # See storage config details at http://source.android.com/tech/storage/
    mkdir /storage/sdcard 0555 root root
    export EXTERNAL_STORAGE /storage/sdcard
    # Support legacy paths
    symlink /storage/sdcard /sdcard
    symlink /storage/sdcard /mnt/sdcard



on init

on fs
# mount mtd partitions
    # Mount /system rw first to give the filesystem a chance to save a checkpoint
    mount ext4 /dev/block/sda /system
    mount ext4 /dev/block/sda /system ro remount
    mount ext4 /dev/block/sdb /data nosuid nodev
    mount ext4 /dev/block/sdc /cache nosuid nodev
   
    # We could mount the sdcard like this if we wanted: " mount vfat /dev/block/sdd /storage/sdcard "  but I chose to show vold's fstab usage.
    # in goldfish they do it via "mount_all /fstab.goldfish" - but there they have mmcblock from the goldfish device definition at the QEMU project.
    mount_all /fstab.aosp_kvm


on post-fs

on post-fs-data
    setprop dalvik.vm.heapstartsize 8m
    setprop dalvik.vm.heapstartsize 8m
    setprop dalvik.vm.heapsize 384m

    mkdir /data/misc/dhcp 1777 system system

on boot
    chown root shell /sys/kernel/debug/tracing/trace_marker

# Set this property so surfaceflinger is not started by system_init
    setprop system_init.startsurfaceflinger 0

# additional initialization
service bigcore-setup /system/bin/sh /system/etc/init.andevcon_2013_aosp_kvm.sh
    class core
    oneshot

service sshd /system/bin/start-ssh
    class main

service dhcpcd_eth0 /system/bin/dhcpcd -o domain_name_servers -ABKL
    class main
    oneshot

service iprenew_eth0 /system/bin/dhcpcd -o domain_name_servers -n
    class main
    oneshot

#
# Educational Example: This is how you add your own native service at initialization
#
service the_most /system/bin/hello_c_example
    class main
    oneshot
